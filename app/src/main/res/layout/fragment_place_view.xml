<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:visibility="visible"
    tools:context=".places.PlaceViewFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/constraintLayout"
        android:layout_width="match_parent"
        android:layout_height="52sp"
        android:paddingHorizontal="5sp">

        <TextView
            android:id="@+id/placeTitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:lines="1"
            android:paddingHorizontal="8dp"
            android:paddingTop="8dp"
            android:text="Name"
            android:textColor="@color/primary_text"
            android:textSize="18sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <ImageButton
            android:id="@+id/button_close"
            style="@style/Widget.AppCompat.ImageButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:layout_marginTop="4dp"
            android:backgroundTint="@color/white"
            android:src="@drawable/ic_baseline_cancel_24"
            android:tint="@color/accent_color"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <ImageButton
            android:id="@+id/button_share"
            style="@style/Widget.AppCompat.ImageButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="4dp"
            android:layout_weight="1"
            android:backgroundTint="@color/white"
            android:src="@android:drawable/ic_menu_share"
            android:tint="@color/accent_color"
            app:layout_constraintEnd_toStartOf="@id/button_close"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/textViewAuthor"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingStart="8dp"
            android:textSize="16sp"
            android:textColor="@color/accent_color"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/placeTitle"
            android:text="Author" />


    </androidx.constraintlayout.widget.ConstraintLayout>

    <ScrollView
        android:id="@+id/routeDetailsScrollView"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_gravity="bottom"
        android:layout_marginTop="2dp"
        android:layout_marginBottom="8dp"
        android:layout_weight="1">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">


            <ImageView
                android:id="@+id/routeImageView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="8dp"
                tools:src="@tools:sample/backgrounds/scenic" />

            <TextView
                android:id="@+id/routeDescription"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginTop="8dp"
                android:text="You can make a view clickable, as a button, by adding the android:onClick attribute in the XML layout. For example, you can make an image act like a button by adding android:onClick to the ImageView.
In this task you create a prototype of an app for ordering desserts from a cafÃ©. After starting a new project based on the Basic Activity template, you modify the TextView with appropriate text, and add images that the user can tap.
1.1 Start the new project Start a new Android Studio project with the app name Droid Cafe. Choose the Basic Activity template, and accept the default Activity name (MainActivity). Make sure the Generate Layout file and Backwards Compatibility (AppCompat) options are selected.
    Click Finish. fhe project opens with two layouts in the res > layout folder: activity_main.xml for the app bar and floating action button (which you don't change in this task), and content_main.xml for everything else in the layout. 4. Open content_main.xml and click the Design tab (if it is not already selected) to show the layout editor. 5. Select the TextView in the layout and open the Attributes pane. 6. Change the textintro attributes as follows:"
                android:visibility="visible" />

            <androidx.fragment.app.FragmentContainerView
                android:id="@+id/map"
                android:name="com.google.android.gms.maps.SupportMapFragment"
                android:layout_width="match_parent"
                android:layout_marginTop="8dp"
                android:layout_height="250dp">
            </androidx.fragment.app.FragmentContainerView>

        </LinearLayout>

    </ScrollView>


</LinearLayout>